stages:
  - lint
  - build
  - test

include:
  - project: code0-tech/development/telescopium
    ref: build-branch
    file: ci-template.gitlab-ci.yml

.bundle:
  image: ruby:3.2.2
  before_script:
    - bundle install --jobs $(nproc)

.rails:
  image: ghcr.io/code0-tech/build-images/ruby-postgres:100.1-ruby-3.2.2-postgres-16.1
  before_script:
    - source ~/.asdf/asdf.sh
    - bundle config build.pg --with-pg-config=$(asdf where postgres)/bin/pg_config
    - cp tooling/pipeline/sagittarius.yml config/sagittarius.yml
    - !reference [.bundle, before_script]
  services:
    - postgres:16.1
  variables:
    POSTGRES_DB: sagittarius_test
    POSTGRES_USER: sagittarius
    POSTGRES_PASSWORD: sagittarius
    RAILS_ENV: test

rubocop:
  extends:
    - .bundle
  stage: lint
  script:
    - bundle exec rubocop | tee output || exit_code=$?
    - |
      echo -e "\e[0Ksection_start:`date +%s`:glpa_summary\r\e[0KHeader of the summary"
      grep -E '[[:digit:]] files inspected, ' output
      echo -e "\e[0Ksection_end:`date +%s`:glpa_summary\r\e[0K"
      exit $exit_code

graphql_docs:
  extends:
    - .rails
  stage: lint
  script:
    - bundle exec rake graphql:compile_docs
    - git add docs
    - git diff --exit-code --staged

build-image:
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug # Debug Image because a shell is required for GitLab Runner
    entrypoint: [ "" ]
  stage: build
  parallel:
    matrix:
      - EDITION:
          - ce
          - ee
  script:
    - '[[ "$EDITION" = "ee" ]] || rm -rf extensions/ee/'
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"ghcr.io\":{\"auth\":\"$(printf "%s:%s" "$" "${C0_GH_TOKEN}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "ghcr.io/code0-tech/sagittarius/ci-builds:${CI_COMMIT_SHA}-${EDITION}"

rspec:
  extends:
    - .rails
  stage: test
  parallel:
    matrix:
      - EDITION:
          - ce
          - ee
  variables:
    FPROF: '1'
  script:
    - '[[ "$EDITION" = "ee" ]] || rm -rf extensions/ee/'
    - bundle exec rspec --format doc --format RspecJunitFormatter --out rspec.xml | tee output || exit_code=$?
    - |
      echo -e "\e[0Ksection_start:`date +%s`:glpa_summary\r\e[0KHeader of the summary"
      echo "Coverage report available at https://code0-tech.gitlab.io/-/development/sagittarius/-/jobs/$CI_JOB_ID/artifacts/tmp/coverage/index.html"
      echo "Test summary available at https://gitlab.com/code0-tech/development/sagittarius/-/pipelines/$CI_PIPELINE_ID/test_report"
      grep 'Finished in ' output
      grep -E '[[:digit:]]+ examples, ' output
      grep -o -E '[[:digit:]]+ / [[:digit:]]+ LOC \(.*\) covered.' output
      grep 'Time spent in factories' output
      echo -e "\e[0Ksection_end:`date +%s`:glpa_summary\r\e[0K"
      exit $exit_code
  coverage: '/LOC \((\d+\.\d+%)\) covered.$/'
  artifacts:
    expire_in: 7 days
    paths:
      - tmp/coverage/index.html
      - tmp/coverage/assets/
    reports:
      junit:
        - rspec.xml

db:migrate:
  extends:
    - .rails
  stage: test
  script:
    - bundle exec rake db:migrate:reset
    - git add db
    - git diff --exit-code --staged

db:rollback-and-migrate:
  extends:
    - .rails
  stage: test
  allow_failure: true
  script:
    - bundle exec rake db:create db:schema:load
    - bundle exec rake db:migrate VERSION=20231203194307
    - bundle exec rake db:migrate
    - git add db
    - git diff --exit-code --staged

boot:production-mode:
  extends:
    - .rails
  stage: test
  parallel:
    matrix:
      - EDITION:
          - ce
          - ee
  variables:
    POSTGRES_DB: sagittarius_production
    POSTGRES_USER: sagittarius
    POSTGRES_PASSWORD: sagittarius
    RAILS_ENV: production
    BUNDLE_WITHOUT: 'development:test'
  script:
    - '[[ "$EDITION" = "ee" ]] || rm -rf extensions/ee/'
    - bundle exec rake db:prepare db:seed_fu
    - bin/rails s &
    - curl --fail -sv --retry 20 --retry-delay 3 --retry-connrefused http://127.0.0.1:3000/health/liveness

boot:docker:
  stage: test
  image: docker:27.5.1
  services:
    - docker:27.5.1-dind
  parallel:
    matrix:
      - EDITION:
          - ce
          - ee
  variables:
    DOCKER_TLS_CERTDIR: /certs
    DOCKER_HOST: tcp://docker:2376
    SAGITTARIUS_IMAGE: ghcr.io/code0-tech/sagittarius/ci-builds:${CI_COMMIT_SHA}-${EDITION}
    CURL_IMAGE: curlimages/curl:8.5.0
  script:
    - docker compose -f docker-compose.dev.yml up -d
    - docker pull ${SAGITTARIUS_IMAGE}
    - docker pull ${CURL_IMAGE}
    - >
      docker run
      --name sagittarius
      --network sagittarius_default
      --network-alias sagittarius
      -v $(pwd)/tooling/pipeline/sagittarius.yml:/rails/config/sagittarius.yml
      ${SAGITTARIUS_IMAGE} &
    - >
      docker run
      --rm
      --network sagittarius_default
      ${CURL_IMAGE}
      curl
      --fail
      -sv
      --retry 20
      --retry-delay 3
      --retry-connrefused
      http://sagittarius:3000/health/liveness

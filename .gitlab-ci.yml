stages:
  - lint
  - build
  - test
  - publish

include:
  - project: code0-tech/development/telescopium
    ref: build-branch
    file: ci-template.gitlab-ci.yml

.bundle:
  image: ruby:3.4.7
  before_script:
    - bundle install --jobs $(nproc)

.rails:
  image: ghcr.io/code0-tech/build-images/ruby-postgres:222.1-ruby-3.4.7-postgres-16.1
  before_script:
    - cp tooling/pipeline/sagittarius.yml config/sagittarius.yml
    - !reference [.bundle, before_script]
  services:
    - postgres:16.1
  variables:
    POSTGRES_DB: sagittarius_test
    POSTGRES_USER: sagittarius
    POSTGRES_PASSWORD: sagittarius
    RAILS_ENV: test

rubocop:
  extends:
    - .bundle
  stage: lint
  script:
    - rubocop_exit_code=0; git_exit_code=0
    - bundle exec rubocop -A | tee output || rubocop_exit_code=$?
    - git diff --exit-code || git_exit_code=$?
    - |
      echo -e "\e[0Ksection_start:`date +%s`:glpa_summary\r\e[0KHeader of the summary"
      grep -E '[[:digit:]] files inspected, ' output
      echo -e "\e[0Ksection_end:`date +%s`:glpa_summary\r\e[0K"
      exit $(($rubocop_exit_code + $git_exit_code))

graphql_docs:
  extends:
    - .rails
  stage: lint
  script:
    - bundle exec rake graphql:compile_docs
    - git add docs
    - git diff --exit-code --staged

rspec:
  extends:
    - .rails
  stage: test
  parallel:
    matrix:
      - EDITION:
          - ce
          - ee
  variables:
    FPROF: '1'
  script:
    - '[[ "$EDITION" = "ee" ]] || rm -rf extensions/ee/'
    - bundle exec rspec --format doc --format RspecJunitFormatter --out rspec.xml | tee output || exit_code=$?
    - |
      echo -e "\e[0Ksection_start:`date +%s`:glpa_summary\r\e[0KHeader of the summary"
      echo "Coverage report available at https://code0-tech.gitlab.io/-/development/sagittarius/-/jobs/$CI_JOB_ID/artifacts/tmp/coverage/index.html"
      echo "Test summary available at https://gitlab.com/code0-tech/development/sagittarius/-/pipelines/$CI_PIPELINE_ID/test_report"
      grep 'Finished in ' output
      grep -E '[[:digit:]]+ examples, ' output
      grep -m 1 -E 'Line Coverage:' output
      grep 'Time spent in factories' output
      echo -e "\e[0Ksection_end:`date +%s`:glpa_summary\r\e[0K"
      exit $exit_code
  coverage: '/Line Coverage:\s\d+\.\d+%/'
  artifacts:
    expire_in: 7 days
    paths:
      - tmp/coverage/index.html
      - tmp/coverage/assets/
    reports:
      junit:
        - rspec.xml

db:migrate:
  extends:
    - .rails
  stage: test
  script:
    - bundle exec rake db:migrate:reset
    - git add db
    - git diff --exit-code --staged

db:rollback-and-migrate:
  extends:
    - .rails
  stage: test
  allow_failure:
    exit_codes: 10
  script:
    - bundle exec rake db:create db:schema:load
    - bundle exec rake db:migrate VERSION=20231203194307
    - bundle exec rake db:migrate
    - git add db
    - git diff --exit-code --staged || exit 10

boot:production-mode:
  extends:
    - .rails
  stage: test
  parallel:
    matrix:
      - EDITION:
          - ce
          - ee
  variables:
    POSTGRES_DB: sagittarius_production
    POSTGRES_USER: sagittarius
    POSTGRES_PASSWORD: sagittarius
    RAILS_ENV: production
    BUNDLE_WITHOUT: 'development:test'
  script:
    - '[[ "$EDITION" = "ee" ]] || rm -rf extensions/ee/'
    - bundle exec rake db:prepare db:seed_fu
    - bin/rails s &
    - curl --fail -sv --retry 20 --retry-delay 3 --retry-connrefused http://127.0.0.1:3000/health/liveness

npm-types:generate-graphql:
  extends:
    - .rails
  stage: build
  script:
    - bundle exec rake graphql:schema:dump
  artifacts:
    expire_in: 7 days
    paths:
      - tmp/schema.graphql
      - tmp/schema.json
      - tooling/graphql/types/


.npm-types:publish-graphql:
  image: node:24.10.0
  needs:
    - npm-types:generate-graphql
  variables:
    GIT_STRATEGY: empty
    NPM_CONFIG_PROVENANCE: "false"
  id_tokens:
    NPM_ID_TOKEN:
      aud: "npm:registry.npmjs.org"
  script:
    - cd tooling/graphql/types
    - npm ci
    - npm run generate
    - npm version --git-tag-version false 0.0.0-$CI_COMMIT_SHA

npm-types:publish-graphql-dry-run:
  extends:
    - .npm-types:publish-graphql
  stage: test
  script:
    - !reference [.npm-types:publish-graphql, script]
    - npm publish --dry-run --tag latest
  artifacts:
    expire_in: 7 days
    paths:
      - tooling/graphql/types/index.d.ts
  rules:
    - if: $C0_GH_REF_NAME != "main"

npm-types:publish-graphql:
  extends:
    - .npm-types:publish-graphql
  stage: publish
  script:
    - !reference [ .npm-types:publish-graphql, script ]
    - npm publish --tag latest
  rules:
    - if: $C0_GH_REF_NAME == "main"
      when: manual
      allow_failure: true
